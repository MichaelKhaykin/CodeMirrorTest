@page "/"
@namespace CodeMirrorTest.Pages
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@{
    Layout = null;
}

<!DOCTYPE html>
<html lang="en">
<head>
    
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>CodeMirrorTest</title>
    <base href="~/" />
    <link rel="stylesheet" href="css/bootstrap/bootstrap.min.css" />
    <link href="css/site.css" rel="stylesheet" /> 
</head>
<body>


    <app>
        <component type="typeof(App)" render-mode="ServerPrerendered" />
    </app>

    <!--
    <div id="blazor-error-ui">
        <environment include="Staging,Production">
            An error has occurred. This application may no longer respond until reloaded.
        </environment>
        <environment include="Development">
            An unhandled exception has occurred. See browser dev tools for details.
        </environment>
        <a href="" class="reload">Reload</a>
        <a class="dismiss">🗙</a>
    </div>
    -->

    <script src="_framework/blazor.server.js"></script>
    <script src="_content/Blazor.Extensions.Canvas/blazor.extensions.canvas.js"></script>

    <script src="codemirror/lib/codemirror.js"></script>
    <script src="/codemirror/mode/clike/clike.js"></script>
    <script src="/codemirror/addon/edit/closebrackets.js"></script>
    <script src="/codemirror/addon/edit/trailingspace.js"></script>
    <link href="codemirror/lib/codemirror.css" rel="stylesheet" />
    <link href="/codemirror/theme/dracula.css" rel="stylesheet" />


    <script>

        var codeMirrorEditor;

        window.convertToCodeMirror = (editor) => {
            codeMirrorEditor = CodeMirror.fromTextArea(document.getElementById(editor), {
                lineNumbers: true,
                autoCloseBrackets: true,
                showTrailingSpace: true,
                theme: "dracula",
                mode: "text/x-csharp",
            });

            
            codeMirrorEditor.setValue("using System;\nnamespace GMRHackers\n{\n    class Program\n    {\n        static void Main(string[] args)\n        {\n        }\n    }\n} ");

            //canvas = document.getElementById(Container).children[0];
            //canvas.appendChild(document.getElementById(editor));
        };

        window.getCodeMirrorValue = () => {
            return codeMirrorEditor.getValue();
        };

        window.getText = (textBoxName) => {
            return document.getElementById(textBoxName).value;
        };

        window.getQuery = (varName) => {
            const urlParams = new URLSearchParams(window.location.search);
            const myParam = urlParams.get(varName);
            return myParam;
        };

        window.setFocusTo = (element) => {
            element.focus();
        };

        window.getWindowWidth = () => {
            return window.innerWidth;
        }

        window.getWindowHeight = () => {
            return window.innerHeight - 20;
        }

    </script>

</body>
</html>
